<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DAO.MemberMapper">
	<!-- 회원정보 최초 등록 -->
	<insert id="insertMember" parameterType="Member">
		insert into members(
		member_seq,
		id,
		password,
		name,
		gender,
		email,
		phone_number,
		postNumber,
		newAddress,
		city,
		county,
		village,
		indate
		) values (
		member_seq.nextval,
		#{id},
		#{password},
		#{name},
		#{gender},
		#{email},
		#{phone_number},
		#{postNumber},
		#{newAddress},
		#{city},
		#{county},
		#{village},
		sysdate
		)
	</insert>

	<!-- 아이디중복확인 -->
	<select id="chkRepeatID" parameterType="String"
		resultType="Integer">
		select count(id)
		from members
		where id=#{id}
	</select>

	<insert id="insertHouseHold" parameterType="HouseHold">
		insert into
		HouseHolds(
		household_seq
		, member_seq
		, product
		, price
		, get_date
		,
		content
		, indate
		, inuser
		) values (
		household_seq.nextval
		, #{product}
		,
		#{product}
		, #{price}
		, sysdate
		, #{content}
		, sysdate
		, #{inuser}
		)
	</insert>

	<delete id="deleteHouseHold" parameterType="HouseHold">
		delete from
		houseHolds
		where household_seq=#{household_seq}
	</delete>

	<update id="fixHouseHold" parameterType="HouseHold">
		update HouseHold
		set
		product=#{product}
		,price=#{price}
		,content=#{content}
		,ldate=sysdate
		,luser=#{inuser}
		where
		household_seq=#{household_seq}
	</update>

	<select id="getHouseHoldList" parameterType="Member"
		resultType="HouseHold">
		select
		household_seq
		, member_seq
		, product
		, price
		, count
		,
		date
		, content
		, indate
		, ldate
		, inuser
		, luser
		from HouseHolds
		where
		member_seq=#{member_seq}
	</select>

	<!-- 아이디 비밀번호 체크하고 로그인 하기 기능 -->
	<select id="loginID" parameterType="Member" resultType="Member">
		select
		member_seq,
		id,
		password,
		name,
		gender,
		email,
		phone_number,
		postNumber,
		newAddress,
		city,
		county,
		village,
		indate
		from members
		where
		id=#{id} and
		password=#{password}
	</select>

	<!-- 회원정보 수정 -->
	<update id="updateMemInfo" parameterType="Member">
		update members
		set
		id
		=#{id}
		, password = #{password}
		, name=#{name}
		, email=#{email}
		,
		phone_number=#{phone_number}
		, postNumber=#{postNumber}
		,
		newAddress=#{newAddress}
		, city=#{city}
		, county=#{county}
		,
		village=#{village}
		, ldate=sysdate
		where
		member_seq = #{member_seq}
	</update>

	<!-- 가계부 설정 입력 -->
	<insert id="insertAccount" parameterType="String">
		insert into accounts(
		member_seq
		)values(
		#{member_seq}
		)
	</insert>

	<!-- 가계부 수정 -->
	<update id="updateAccount" parameterType="Account">
		update accounts set
		account = #{account}
		, montly_salary=#{montly_salary}
		,
		montly_save=#{montly_save}
		, indate=sysdate
		, inuser=#{inuser}
		where
		member_seq=#{member_seq}
	</update>

	<!-- 1개월 이내 검색 -->
	<select parameterType="HouseHold" id="searchForAMonth"
		resultType="String">
		select product, price, get_date, content
		from HouseHolds
		where get_date between sysdate-30 and sysdate
		order by get_date desc
	</select>

	<!-- 3개월 이내 검색 -->
	<select parameterType="HouseHold" id="searchForThreeMonth"
		resultType="String">
		select product, price, get_date, content
		from HouseHolds
		where get_date between sysdate-90 and sysdate
		order by get_date desc
	</select>

	<!-- 6개월 이내 검색 -->
	<select parameterType="HouseHold" id="searchForSixMonth"
		resultType="String">
		select product, price, get_date, content
		from HouseHolds
		where get_date between sysdate-120 and sysdate
		order by get_date desc
	</select>

	<!-- 1년 이내 검색 -->
	<select parameterType="HouseHold" id="searchForAnYear"
		resultType="String">
		select product, price, get_date, content
		from HouseHolds
		where get_date between sysdate-365 and sysdate
		order by get_date desc
	</select>


	<!-- 캘린더 관련 쿼리문 -->
	<!-- 메모추가 -->
	<insert id="insertMemo" parameterType="Schedule">
		insert into Schedule
		(
		schedule_seq
		,member_seq
		,data_type
		,from_date
		,content
		,indate
		,inuser
		)
		values
		(
		schedule_seq.nextval
		,#{member_seq}
		, #{data_type}
		,
		to_date(#{from_date},'YYYYMMDD')
		,
		#{content}
		, sysdate
		, #{inuser}
		)
	</insert>

	<!-- 스케쥴 리스트 받아오기 -->
	<select id="getSchedule" parameterType="Member"
		resultType="Schedule">
		select
		schedule_seq
		,member_seq
		,data_type
		,to_char(from_date,'YYYYMMDD') from_date
		,to_char(to_date,'YYYYMMDD')
		to_date
		,content
		,indate
		,ldate
		,inuser
		,luser
		from Schedule
		where
		member_seq=#{member_seq}
	</select>

	<!-- 스케쥴 삭제하기 -->
	<delete id="deleteSchedule" parameterType="Schedule">
		delete from
		Schedule
		where schedule_seq=#{schedule_seq}
	</delete>

	<!-- 스케쥴 리프레시 -->
	<select id="getDaySchedule" parameterType="Schedule"
		resultType="Schedule">
		select
		schedule_seq
		,member_seq
		,data_type
		,to_char(from_date,'YYYYMMDD')
		from_date
		,to_char(to_date,'YYYYMMDD')
		to_date
		,content
		,indate
		,ldate
		,inuser
		,luser
		from Schedule
		where
		from_date=#{from_date} OR
		(#{from_date} between from_date and to_date)
	</select>
</mapper>
  